// build script configuration for all projects
buildscript {
    ext {
        springBootVersion = "2.6.2"
        springBootESVersion = "2.6.5"
        moduleName = 'isc-main'
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        //gradle plugins location
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('org.owasp:dependency-check-gradle:3.1.1')
        classpath('io.spring.gradle:dependency-management-plugin:1.0.8.RELEASE')
    }
}

// configuration for all projects
allprojects {
    repositories {
        mavenCentral()
    }

    apply plugin: 'idea'

    // IntelliJ configuration
    idea {
        module {
            name = "${moduleName}"
            inheritOutputDirs = true
        }
    }

    group 'io.iscweb'
    version '1.0-SNAPSHOT'
}

// configuration for subprojects
subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.owasp.dependencycheck'
    apply plugin: 'java-library'
    apply plugin: 'groovy-base'
//    apply plugin: 'findbugs'
//    apply plugin: 'pmd'

    sourceCompatibility = '11'
    targetCompatibility = '11'

//    fix jUnit jupiter version here.
    ext['junit-jupiter.version'] = '5.3.0'
    ext['undertow.version'] = '2.2.3.Final'

    dependencies {
        implementation group: 'org.springframework.boot', name: 'spring-boot'
        implementation group: 'org.springframework.boot', name: 'spring-boot-starter-aop'
        implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security'
        implementation group: 'org.springframework.boot', name: 'spring-boot-starter-amqp'
        implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
        implementation group: 'org.springframework.data', name: 'spring-data-commons', version: '2.6.0'
        implementation group: 'org.springframework.security', name: 'spring-security-messaging', version: '5.3.2.RELEASE'

        implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
        implementation group: 'javax.validation', name: 'validation-api', version: '2.0.1.Final'

        implementation (group: 'com.google.guava', name: 'guava', version: '29.0-jre') {
            exclude group: 'org.checkerframework', module: 'checker-qual'
        }
        implementation group: 'org.checkerframework', name: 'checker-qual', version: '3.5.0'

        implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.29'
        implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.13.1'
        implementation group: 'org.projectlombok', name: 'lombok', version: '1.18.12'
        implementation group: 'org.mapstruct', name: 'mapstruct-processor', version: '1.3.1.Final'

        annotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.12'

        testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test'
        testImplementation group: 'org.springframework.security', name: 'spring-security-test'

        testImplementation group: 'org.codehaus.groovy', name: 'groovy-all', version: '3.0.9', ext: 'pom'
        testImplementation group: 'org.codehaus.groovy', name: 'groovy-test', version: '3.0.9'
        testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.8.2'
        testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.8.2'

        testImplementation group: 'org.junit.platform', name: 'junit-platform-engine', version: '1.8.2'
        testImplementation group: 'org.junit.platform', name: 'junit-platform-commons', version: '1.8.2'
        testImplementation group: 'org.spockframework', name: 'spock-core', version: '2.0-groovy-3.0'
        testImplementation group: 'org.spockframework', name: 'spock-spring', version: '2.0-groovy-3.0'
        testImplementation group: 'com.athaydes', name: 'spock-reports', version: '2.0-groovy-3.0'

        developmentOnly group: 'org.springframework.boot', name: 'spring-boot-devtools'
    }

//    Dependency validation for security.
    dependencyCheck {
        skipConfigurations = ["apiElements", "implementation", "runtimeElements", "runtimeOnly", "testImplementation", "testRuntimeOnly"]
    }

    task explodedJar(type: Copy) {
        with jar
        into "${buildDir}/exploded"
        into('lib') {
            from configurations.runtimeClasspath
        }
    }

    bootJar {
        enabled = false
        manifest {
            attributes 'Start-Class': 'com.iscweb.app.ControlCenter'
        }
    }

    bootRun {
        enabled = false
    }

    jar {
        enabled = true
    }

    // Exclude CheckStyle for isc-integration-mip.
    if (it.name != 'isc-integration-mip') {
        apply plugin: 'checkstyle'

        checkstyle {
            toolVersion '8.36.2'
            ignoreFailures = true
            configFile file("${project.rootDir}/../isc-env/codestyle/checkstyle.xml")
        }
        checkstyleMain {
            source = 'src/main/java'
        }
        checkstyleTest {
            source = 'src/test/java'
        }
    }

    test {
        useJUnitPlatform()
    }

//    task checkstyle(type: Checkstyle) {
//        configFile file("${project.rootDir}/configs/checkstyle.xml") // Checkstyle config location
//        source 'src/main/java'
//        include '**/*.java'
//        exclude '**/gen/**'
//
//        classpath = files()
//    }
//
//    task findbugs (type: FindBugs, dependsOn: assembleDebug) {
//        source = fileTree('src/main/java')
//        classes = fileTree('build/intermediates/classes/debug/')
//        classpath = files(project.configurations.compile.asPath)
//
//        effort = 'max'
//
//        excludeFilter = file("${project.rootDir}/configs/findbugs.xml") // Findbugs exclude config location
//
//        task.reports {
//            xml.configure {
//                destination "build/reports/findbugs/findbugs-report.xml"
//                enabled = false
//            }
//
//            html.configure {
//                destination "build/reports/findbugs/findbugs-report.html"
//                enabled = true
//            }
//        }
//    }
//
//    task pmd (type: Pmd, dependsOn: assembleDebug) {
//        ruleSetFiles = files('${project.rootDir}/configs/pmd-ruleset.xml') // Pmd config location
//        ruleSets = ["basic", "braces", "strings", "design", "unusedcode"]
//        source = fileTree('src/main/java')
//
//        reports {
//            xml.enabled = false
//            html.enabled = true
//        }
//    }
}

// this task is used when building local isc-app docker container with the latest application.jar
// and application.yaml to update your docker artifacts folder.
task sArtifacts(type: Copy) {
    dependsOn(':isc-app:build')
    from file("${project.rootDir}/../isc-main/isc-app/build/libs/"), file("${project.rootDir}/../isc-main/isc-app/src/main/resources/application.default.yml")
    into file("${project.rootDir}/../isc-env/docker/isc-app/artifacts")
    rename 'isc-app-(.*)', 'application.jar'
    rename 'application.default.yml', 'application.yml'
}

// this task is used when building local isc-client docker container to update your client artifacts folder.
task cArtifacts(type: Copy) {
    from file("${project.rootDir}/../isc-main/isc-client/build")
    into file("${project.rootDir}/../isc-env/docker/isc-client/artifacts/build")
}

// isc-client cleanup task
task cClean(type: Delete) {
    delete "${project.rootDir}/../isc-env/docker/isc-client/artifacts/build"
}

// initializes yarn tool for isc-client
task cInstall(type: Exec) {
    group 'isc-client'
    description 'Initializes isc-client dependencies (using yarn as the executable)'
    workingDir 'isc-client/'
    executable 'yarn'
    args 'install'
}

// used to compile isc-client front-end module
task cCompile(type: Exec) {
    group 'isc-client'
    description 'Builds isc-client module (using yarn as the executable)'
    workingDir 'isc-client/'
    executable 'yarn'
    args 'build'
}

// launches isc-client yarn server
task cServer(type: Exec) {
    group 'isc-client'
    description 'Launch yarn dev server for active front-end dev  work'
    workingDir 'isc-client/'
    executable 'yarn'
    args 'start'
}

// a set of tasks to cleanup, initialize and build client module isc-client
task cBuild {
    group 'isc-client'

    dependsOn 'cClean'
    dependsOn 'cInstall'
    dependsOn 'cCompile'
    dependsOn 'cArtifacts'

    cInstall.mustRunAfter('cClean')
    cCompile.mustRunAfter('cInstall')
    cArtifacts.mustRunAfter('cCompile')

    doLast {
        print 'Building the whole front-end'
    }
}
