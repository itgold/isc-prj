package com.mip.registry;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.3.6
 * 2021-11-02T20:24:57.954-07:00
 * Generated source version: 3.3.6
 *
 */
@WebServiceClient(name = "ServiceRegistrationService",
                  wsdlLocation = "file:/home/denis/Work/ISC/isc-web/isc-main/isc-integration-mip/src/main/resources/wsdl/ServiceRegistrationService.wsdl",
                  targetNamespace = "http://tempuri.org/")
public class ServiceRegistrationService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://tempuri.org/", "ServiceRegistrationService");
    public final static QName BasicHttpBindingIServiceRegistrationService = new QName("http://tempuri.org/", "BasicHttpBinding_IServiceRegistrationService");
    public final static QName WSHttpBindingIServiceRegistrationService = new QName("http://tempuri.org/", "WSHttpBinding_IServiceRegistrationService");
    public final static QName WSHttpBindingIServiceRegistrationService1 = new QName("http://tempuri.org/", "WSHttpBinding_IServiceRegistrationService1");
    static {
        URL url = null;
        try {
            url = new URL("file:/home/denis/Work/ISC/isc-web/isc-main/isc-integration-mip/src/main/resources/wsdl/ServiceRegistrationService.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(ServiceRegistrationService.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "file:/home/denis/Work/ISC/isc-web/isc-main/isc-integration-mip/src/main/resources/wsdl/ServiceRegistrationService.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public ServiceRegistrationService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public ServiceRegistrationService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ServiceRegistrationService() {
        super(WSDL_LOCATION, SERVICE);
    }

    public ServiceRegistrationService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public ServiceRegistrationService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public ServiceRegistrationService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns IServiceRegistrationService
     */
    @WebEndpoint(name = "BasicHttpBinding_IServiceRegistrationService")
    public IServiceRegistrationService getBasicHttpBindingIServiceRegistrationService() {
        return super.getPort(BasicHttpBindingIServiceRegistrationService, IServiceRegistrationService.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IServiceRegistrationService
     */
    @WebEndpoint(name = "BasicHttpBinding_IServiceRegistrationService")
    public IServiceRegistrationService getBasicHttpBindingIServiceRegistrationService(WebServiceFeature... features) {
        return super.getPort(BasicHttpBindingIServiceRegistrationService, IServiceRegistrationService.class, features);
    }


    /**
     *
     * @return
     *     returns IServiceRegistrationService
     */
    @WebEndpoint(name = "WSHttpBinding_IServiceRegistrationService")
    public IServiceRegistrationService getWSHttpBindingIServiceRegistrationService() {
        return super.getPort(WSHttpBindingIServiceRegistrationService, IServiceRegistrationService.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IServiceRegistrationService
     */
    @WebEndpoint(name = "WSHttpBinding_IServiceRegistrationService")
    public IServiceRegistrationService getWSHttpBindingIServiceRegistrationService(WebServiceFeature... features) {
        return super.getPort(WSHttpBindingIServiceRegistrationService, IServiceRegistrationService.class, features);
    }


    /**
     *
     * @return
     *     returns IServiceRegistrationService
     */
    @WebEndpoint(name = "WSHttpBinding_IServiceRegistrationService1")
    public IServiceRegistrationService getWSHttpBindingIServiceRegistrationService1() {
        return super.getPort(WSHttpBindingIServiceRegistrationService1, IServiceRegistrationService.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IServiceRegistrationService
     */
    @WebEndpoint(name = "WSHttpBinding_IServiceRegistrationService1")
    public IServiceRegistrationService getWSHttpBindingIServiceRegistrationService1(WebServiceFeature... features) {
        return super.getPort(WSHttpBindingIServiceRegistrationService1, IServiceRegistrationService.class, features);
    }

}
