package com.mip.config;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 3.3.6
 * 2021-11-02T20:25:02.714-07:00
 * Generated source version: 3.3.6
 *
 */
@WebService(targetNamespace = "http://video.net/ConfigurationService", name = "IConfigurationService")
@XmlSeeAlso({ObjectFactory.class})
public interface IConfigurationService {

    @WebMethod(operationName = "SetItem", action = "http://video.net/ConfigurationService/IConfigurationService/SetItem")
    @Action(input = "http://video.net/ConfigurationService/IConfigurationService/SetItem", output = "http://video.net/ConfigurationService/IConfigurationService/SetItemResponse", fault = {@FaultAction(className = IConfigurationServiceSetItemArgumentNullExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/SetItemArgumentNullExceptionFaultFault"), @FaultAction(className = IConfigurationServiceSetItemArgumentExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/SetItemArgumentExceptionFaultFault"), @FaultAction(className = IConfigurationServiceSetItemServerExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/SetItemServerExceptionFaultFault"), @FaultAction(className = IConfigurationServiceSetItemPathNotFoundExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/SetItemPathNotFoundExceptionFaultFault"), @FaultAction(className = IConfigurationServiceSetItemNotSupportedExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/SetItemNotSupportedExceptionFaultFault"), @FaultAction(className = IConfigurationServiceSetItemUnauthorizedAccessFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/SetItemUnauthorizedAccessFaultFault"), @FaultAction(className = IConfigurationServiceSetItemLicenseExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/SetItemLicenseExceptionFaultFault")})
    @RequestWrapper(localName = "SetItem", targetNamespace = "http://video.net/ConfigurationService", className = "com.mip.config.SetItem")
    @ResponseWrapper(localName = "SetItemResponse", targetNamespace = "http://video.net/ConfigurationService", className = "com.mip.config.SetItemResponse")
    @WebResult(name = "SetItemResult", targetNamespace = "http://video.net/ConfigurationService")
    public com.mip.config.ValidateResult setItem(

        @WebParam(name = "item", targetNamespace = "http://video.net/ConfigurationService")
        com.mip.config.ConfigurationItem item
    ) throws IConfigurationServiceSetItemArgumentNullExceptionFaultFaultFaultMessage, IConfigurationServiceSetItemArgumentExceptionFaultFaultFaultMessage, IConfigurationServiceSetItemServerExceptionFaultFaultFaultMessage, IConfigurationServiceSetItemPathNotFoundExceptionFaultFaultFaultMessage, IConfigurationServiceSetItemNotSupportedExceptionFaultFaultFaultMessage, IConfigurationServiceSetItemUnauthorizedAccessFaultFaultFaultMessage, IConfigurationServiceSetItemLicenseExceptionFaultFaultFaultMessage;

    @WebMethod(operationName = "ValidateItem", action = "http://video.net/ConfigurationService/IConfigurationService/ValidateItem")
    @Action(input = "http://video.net/ConfigurationService/IConfigurationService/ValidateItem", output = "http://video.net/ConfigurationService/IConfigurationService/ValidateItemResponse", fault = {@FaultAction(className = IConfigurationServiceValidateItemArgumentNullExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/ValidateItemArgumentNullExceptionFaultFault"), @FaultAction(className = IConfigurationServiceValidateItemArgumentExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/ValidateItemArgumentExceptionFaultFault"), @FaultAction(className = IConfigurationServiceValidateItemServerExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/ValidateItemServerExceptionFaultFault"), @FaultAction(className = IConfigurationServiceValidateItemPathNotFoundExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/ValidateItemPathNotFoundExceptionFaultFault"), @FaultAction(className = IConfigurationServiceValidateItemNotSupportedExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/ValidateItemNotSupportedExceptionFaultFault"), @FaultAction(className = IConfigurationServiceValidateItemUnauthorizedAccessFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/ValidateItemUnauthorizedAccessFaultFault"), @FaultAction(className = IConfigurationServiceValidateItemLicenseExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/ValidateItemLicenseExceptionFaultFault")})
    @RequestWrapper(localName = "ValidateItem", targetNamespace = "http://video.net/ConfigurationService", className = "com.mip.config.ValidateItem")
    @ResponseWrapper(localName = "ValidateItemResponse", targetNamespace = "http://video.net/ConfigurationService", className = "com.mip.config.ValidateItemResponse")
    @WebResult(name = "ValidateItemResult", targetNamespace = "http://video.net/ConfigurationService")
    public com.mip.config.ValidateResult validateItem(

        @WebParam(name = "item", targetNamespace = "http://video.net/ConfigurationService")
        com.mip.config.ConfigurationItem item
    ) throws IConfigurationServiceValidateItemArgumentNullExceptionFaultFaultFaultMessage, IConfigurationServiceValidateItemArgumentExceptionFaultFaultFaultMessage, IConfigurationServiceValidateItemServerExceptionFaultFaultFaultMessage, IConfigurationServiceValidateItemPathNotFoundExceptionFaultFaultFaultMessage, IConfigurationServiceValidateItemNotSupportedExceptionFaultFaultFaultMessage, IConfigurationServiceValidateItemUnauthorizedAccessFaultFaultFaultMessage, IConfigurationServiceValidateItemLicenseExceptionFaultFaultFaultMessage;

    @WebMethod(operationName = "GetItem", action = "http://video.net/ConfigurationService/IConfigurationService/GetItem")
    @Action(input = "http://video.net/ConfigurationService/IConfigurationService/GetItem", output = "http://video.net/ConfigurationService/IConfigurationService/GetItemResponse", fault = {@FaultAction(className = IConfigurationServiceGetItemArgumentNullExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/GetItemArgumentNullExceptionFaultFault"), @FaultAction(className = IConfigurationServiceGetItemArgumentExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/GetItemArgumentExceptionFaultFault"), @FaultAction(className = IConfigurationServiceGetItemServerExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/GetItemServerExceptionFaultFault"), @FaultAction(className = IConfigurationServiceGetItemPathNotFoundExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/GetItemPathNotFoundExceptionFaultFault"), @FaultAction(className = IConfigurationServiceGetItemNotSupportedExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/GetItemNotSupportedExceptionFaultFault"), @FaultAction(className = IConfigurationServiceGetItemUnauthorizedAccessFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/GetItemUnauthorizedAccessFaultFault"), @FaultAction(className = IConfigurationServiceGetItemLicenseExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/GetItemLicenseExceptionFaultFault")})
    @RequestWrapper(localName = "GetItem", targetNamespace = "http://video.net/ConfigurationService", className = "com.mip.config.GetItem")
    @ResponseWrapper(localName = "GetItemResponse", targetNamespace = "http://video.net/ConfigurationService", className = "com.mip.config.GetItemResponse")
    @WebResult(name = "GetItemResult", targetNamespace = "http://video.net/ConfigurationService")
    public com.mip.config.ConfigurationItem getItem(

        @WebParam(name = "path", targetNamespace = "http://video.net/ConfigurationService")
        java.lang.String path
    ) throws IConfigurationServiceGetItemArgumentNullExceptionFaultFaultFaultMessage, IConfigurationServiceGetItemArgumentExceptionFaultFaultFaultMessage, IConfigurationServiceGetItemServerExceptionFaultFaultFaultMessage, IConfigurationServiceGetItemPathNotFoundExceptionFaultFaultFaultMessage, IConfigurationServiceGetItemNotSupportedExceptionFaultFaultFaultMessage, IConfigurationServiceGetItemUnauthorizedAccessFaultFaultFaultMessage, IConfigurationServiceGetItemLicenseExceptionFaultFaultFaultMessage;

    @WebMethod(operationName = "GetChildItems", action = "http://video.net/ConfigurationService/IConfigurationService/GetChildItems")
    @Action(input = "http://video.net/ConfigurationService/IConfigurationService/GetChildItems", output = "http://video.net/ConfigurationService/IConfigurationService/GetChildItemsResponse", fault = {@FaultAction(className = IConfigurationServiceGetChildItemsArgumentNullExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/GetChildItemsArgumentNullExceptionFaultFault"), @FaultAction(className = IConfigurationServiceGetChildItemsArgumentExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/GetChildItemsArgumentExceptionFaultFault"), @FaultAction(className = IConfigurationServiceGetChildItemsServerExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/GetChildItemsServerExceptionFaultFault"), @FaultAction(className = IConfigurationServiceGetChildItemsPathNotFoundExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/GetChildItemsPathNotFoundExceptionFaultFault"), @FaultAction(className = IConfigurationServiceGetChildItemsNotSupportedExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/GetChildItemsNotSupportedExceptionFaultFault"), @FaultAction(className = IConfigurationServiceGetChildItemsUnauthorizedAccessFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/GetChildItemsUnauthorizedAccessFaultFault"), @FaultAction(className = IConfigurationServiceGetChildItemsLicenseExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/GetChildItemsLicenseExceptionFaultFault")})
    @RequestWrapper(localName = "GetChildItems", targetNamespace = "http://video.net/ConfigurationService", className = "com.mip.config.GetChildItems")
    @ResponseWrapper(localName = "GetChildItemsResponse", targetNamespace = "http://video.net/ConfigurationService", className = "com.mip.config.GetChildItemsResponse")
    @WebResult(name = "GetChildItemsResult", targetNamespace = "http://video.net/ConfigurationService")
    public com.mip.config.ArrayOfConfigurationItem getChildItems(

        @WebParam(name = "path", targetNamespace = "http://video.net/ConfigurationService")
        java.lang.String path
    ) throws IConfigurationServiceGetChildItemsArgumentNullExceptionFaultFaultFaultMessage, IConfigurationServiceGetChildItemsArgumentExceptionFaultFaultFaultMessage, IConfigurationServiceGetChildItemsServerExceptionFaultFaultFaultMessage, IConfigurationServiceGetChildItemsPathNotFoundExceptionFaultFaultFaultMessage, IConfigurationServiceGetChildItemsNotSupportedExceptionFaultFaultFaultMessage, IConfigurationServiceGetChildItemsUnauthorizedAccessFaultFaultFaultMessage, IConfigurationServiceGetChildItemsLicenseExceptionFaultFaultFaultMessage;

    @WebMethod(operationName = "HasChildItems", action = "http://video.net/ConfigurationService/IConfigurationService/HasChildItems")
    @Action(input = "http://video.net/ConfigurationService/IConfigurationService/HasChildItems", output = "http://video.net/ConfigurationService/IConfigurationService/HasChildItemsResponse", fault = {@FaultAction(className = IConfigurationServiceHasChildItemsArgumentNullExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/HasChildItemsArgumentNullExceptionFaultFault"), @FaultAction(className = IConfigurationServiceHasChildItemsArgumentExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/HasChildItemsArgumentExceptionFaultFault"), @FaultAction(className = IConfigurationServiceHasChildItemsServerExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/HasChildItemsServerExceptionFaultFault"), @FaultAction(className = IConfigurationServiceHasChildItemsPathNotFoundExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/HasChildItemsPathNotFoundExceptionFaultFault"), @FaultAction(className = IConfigurationServiceHasChildItemsNotSupportedExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/HasChildItemsNotSupportedExceptionFaultFault"), @FaultAction(className = IConfigurationServiceHasChildItemsUnauthorizedAccessFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/HasChildItemsUnauthorizedAccessFaultFault"), @FaultAction(className = IConfigurationServiceHasChildItemsLicenseExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/HasChildItemsLicenseExceptionFaultFault")})
    @RequestWrapper(localName = "HasChildItems", targetNamespace = "http://video.net/ConfigurationService", className = "com.mip.config.HasChildItems")
    @ResponseWrapper(localName = "HasChildItemsResponse", targetNamespace = "http://video.net/ConfigurationService", className = "com.mip.config.HasChildItemsResponse")
    @WebResult(name = "HasChildItemsResult", targetNamespace = "http://video.net/ConfigurationService")
    public java.lang.Boolean hasChildItems(

        @WebParam(name = "path", targetNamespace = "http://video.net/ConfigurationService")
        java.lang.String path
    ) throws IConfigurationServiceHasChildItemsArgumentNullExceptionFaultFaultFaultMessage, IConfigurationServiceHasChildItemsArgumentExceptionFaultFaultFaultMessage, IConfigurationServiceHasChildItemsServerExceptionFaultFaultFaultMessage, IConfigurationServiceHasChildItemsPathNotFoundExceptionFaultFaultFaultMessage, IConfigurationServiceHasChildItemsNotSupportedExceptionFaultFaultFaultMessage, IConfigurationServiceHasChildItemsUnauthorizedAccessFaultFaultFaultMessage, IConfigurationServiceHasChildItemsLicenseExceptionFaultFaultFaultMessage;

    @WebMethod(operationName = "GetChildItemsHierarchy", action = "http://video.net/ConfigurationService/IConfigurationService/GetChildItemsHierarchy")
    @Action(input = "http://video.net/ConfigurationService/IConfigurationService/GetChildItemsHierarchy", output = "http://video.net/ConfigurationService/IConfigurationService/GetChildItemsHierarchyResponse", fault = {@FaultAction(className = IConfigurationServiceGetChildItemsHierarchyArgumentNullExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/GetChildItemsHierarchyArgumentNullExceptionFaultFault"), @FaultAction(className = IConfigurationServiceGetChildItemsHierarchyArgumentExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/GetChildItemsHierarchyArgumentExceptionFaultFault"), @FaultAction(className = IConfigurationServiceGetChildItemsHierarchyServerExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/GetChildItemsHierarchyServerExceptionFaultFault"), @FaultAction(className = IConfigurationServiceGetChildItemsHierarchyPathNotFoundExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/GetChildItemsHierarchyPathNotFoundExceptionFaultFault"), @FaultAction(className = IConfigurationServiceGetChildItemsHierarchyNotSupportedExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/GetChildItemsHierarchyNotSupportedExceptionFaultFault"), @FaultAction(className = IConfigurationServiceGetChildItemsHierarchyUnauthorizedAccessFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/GetChildItemsHierarchyUnauthorizedAccessFaultFault"), @FaultAction(className = IConfigurationServiceGetChildItemsHierarchyLicenseExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/GetChildItemsHierarchyLicenseExceptionFaultFault")})
    @RequestWrapper(localName = "GetChildItemsHierarchy", targetNamespace = "http://video.net/ConfigurationService", className = "com.mip.config.GetChildItemsHierarchy")
    @ResponseWrapper(localName = "GetChildItemsHierarchyResponse", targetNamespace = "http://video.net/ConfigurationService", className = "com.mip.config.GetChildItemsHierarchyResponse")
    @WebResult(name = "GetChildItemsHierarchyResult", targetNamespace = "http://video.net/ConfigurationService")
    public com.mip.config.ArrayOfConfigurationItem getChildItemsHierarchy(

        @WebParam(name = "path", targetNamespace = "http://video.net/ConfigurationService")
        java.lang.String path,
        @WebParam(name = "itemTypes", targetNamespace = "http://video.net/ConfigurationService")
        com.mip.config.ArrayOfstring itemTypes,
        @WebParam(name = "itemFilters", targetNamespace = "http://video.net/ConfigurationService")
        com.mip.config.ArrayOfItemFilter itemFilters
    ) throws IConfigurationServiceGetChildItemsHierarchyArgumentNullExceptionFaultFaultFaultMessage, IConfigurationServiceGetChildItemsHierarchyArgumentExceptionFaultFaultFaultMessage, IConfigurationServiceGetChildItemsHierarchyServerExceptionFaultFaultFaultMessage, IConfigurationServiceGetChildItemsHierarchyPathNotFoundExceptionFaultFaultFaultMessage, IConfigurationServiceGetChildItemsHierarchyNotSupportedExceptionFaultFaultFaultMessage, IConfigurationServiceGetChildItemsHierarchyUnauthorizedAccessFaultFaultFaultMessage, IConfigurationServiceGetChildItemsHierarchyLicenseExceptionFaultFaultFaultMessage;

    @WebMethod(operationName = "GetItems", action = "http://video.net/ConfigurationService/IConfigurationService/GetItems")
    @Action(input = "http://video.net/ConfigurationService/IConfigurationService/GetItems", output = "http://video.net/ConfigurationService/IConfigurationService/GetItemsResponse", fault = {@FaultAction(className = IConfigurationServiceGetItemsArgumentNullExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/GetItemsArgumentNullExceptionFaultFault"), @FaultAction(className = IConfigurationServiceGetItemsArgumentExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/GetItemsArgumentExceptionFaultFault"), @FaultAction(className = IConfigurationServiceGetItemsServerExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/GetItemsServerExceptionFaultFault"), @FaultAction(className = IConfigurationServiceGetItemsPathNotFoundExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/GetItemsPathNotFoundExceptionFaultFault"), @FaultAction(className = IConfigurationServiceGetItemsNotSupportedExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/GetItemsNotSupportedExceptionFaultFault"), @FaultAction(className = IConfigurationServiceGetItemsUnauthorizedAccessFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/GetItemsUnauthorizedAccessFaultFault"), @FaultAction(className = IConfigurationServiceGetItemsLicenseExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/GetItemsLicenseExceptionFaultFault")})
    @RequestWrapper(localName = "GetItems", targetNamespace = "http://video.net/ConfigurationService", className = "com.mip.config.GetItems")
    @ResponseWrapper(localName = "GetItemsResponse", targetNamespace = "http://video.net/ConfigurationService", className = "com.mip.config.GetItemsResponse")
    @WebResult(name = "GetItemsResult", targetNamespace = "http://video.net/ConfigurationService")
    public com.mip.config.ArrayOfConfigurationItem getItems(

        @WebParam(name = "itemType", targetNamespace = "http://video.net/ConfigurationService")
        java.lang.String itemType
    ) throws IConfigurationServiceGetItemsArgumentNullExceptionFaultFaultFaultMessage, IConfigurationServiceGetItemsArgumentExceptionFaultFaultFaultMessage, IConfigurationServiceGetItemsServerExceptionFaultFaultFaultMessage, IConfigurationServiceGetItemsPathNotFoundExceptionFaultFaultFaultMessage, IConfigurationServiceGetItemsNotSupportedExceptionFaultFaultFaultMessage, IConfigurationServiceGetItemsUnauthorizedAccessFaultFaultFaultMessage, IConfigurationServiceGetItemsLicenseExceptionFaultFaultFaultMessage;

    @WebMethod(operationName = "GetTranslations", action = "http://video.net/ConfigurationService/IConfigurationService/GetTranslations")
    @Action(input = "http://video.net/ConfigurationService/IConfigurationService/GetTranslations", output = "http://video.net/ConfigurationService/IConfigurationService/GetTranslationsResponse", fault = {@FaultAction(className = IConfigurationServiceGetTranslationsArgumentNullExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/GetTranslationsArgumentNullExceptionFaultFault"), @FaultAction(className = IConfigurationServiceGetTranslationsArgumentExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/GetTranslationsArgumentExceptionFaultFault"), @FaultAction(className = IConfigurationServiceGetTranslationsServerExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/GetTranslationsServerExceptionFaultFault"), @FaultAction(className = IConfigurationServiceGetTranslationsPathNotFoundExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/GetTranslationsPathNotFoundExceptionFaultFault"), @FaultAction(className = IConfigurationServiceGetTranslationsNotSupportedExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/GetTranslationsNotSupportedExceptionFaultFault"), @FaultAction(className = IConfigurationServiceGetTranslationsUnauthorizedAccessFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/GetTranslationsUnauthorizedAccessFaultFault"), @FaultAction(className = IConfigurationServiceGetTranslationsLicenseExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/GetTranslationsLicenseExceptionFaultFault")})
    @RequestWrapper(localName = "GetTranslations", targetNamespace = "http://video.net/ConfigurationService", className = "com.mip.config.GetTranslations")
    @ResponseWrapper(localName = "GetTranslationsResponse", targetNamespace = "http://video.net/ConfigurationService", className = "com.mip.config.GetTranslationsResponse")
    @WebResult(name = "GetTranslationsResult", targetNamespace = "http://video.net/ConfigurationService")
    public com.mip.config.ArrayOfKeyValueOfstringstring getTranslations(

        @WebParam(name = "languageId", targetNamespace = "http://video.net/ConfigurationService")
        java.lang.String languageId
    ) throws IConfigurationServiceGetTranslationsArgumentNullExceptionFaultFaultFaultMessage, IConfigurationServiceGetTranslationsArgumentExceptionFaultFaultFaultMessage, IConfigurationServiceGetTranslationsServerExceptionFaultFaultFaultMessage, IConfigurationServiceGetTranslationsPathNotFoundExceptionFaultFaultFaultMessage, IConfigurationServiceGetTranslationsNotSupportedExceptionFaultFaultFaultMessage, IConfigurationServiceGetTranslationsUnauthorizedAccessFaultFaultFaultMessage, IConfigurationServiceGetTranslationsLicenseExceptionFaultFaultFaultMessage;

    @WebMethod(operationName = "ConstructItem", action = "http://video.net/ConfigurationService/IConfigurationService/ConstructItem")
    @Action(input = "http://video.net/ConfigurationService/IConfigurationService/ConstructItem", output = "http://video.net/ConfigurationService/IConfigurationService/ConstructItemResponse", fault = {@FaultAction(className = IConfigurationServiceConstructItemArgumentNullExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/ConstructItemArgumentNullExceptionFaultFault"), @FaultAction(className = IConfigurationServiceConstructItemArgumentExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/ConstructItemArgumentExceptionFaultFault"), @FaultAction(className = IConfigurationServiceConstructItemServerExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/ConstructItemServerExceptionFaultFault"), @FaultAction(className = IConfigurationServiceConstructItemPathNotFoundExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/ConstructItemPathNotFoundExceptionFaultFault"), @FaultAction(className = IConfigurationServiceConstructItemNotSupportedExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/ConstructItemNotSupportedExceptionFaultFault"), @FaultAction(className = IConfigurationServiceConstructItemUnauthorizedAccessFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/ConstructItemUnauthorizedAccessFaultFault"), @FaultAction(className = IConfigurationServiceConstructItemLicenseExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/ConstructItemLicenseExceptionFaultFault")})
    @RequestWrapper(localName = "ConstructItem", targetNamespace = "http://video.net/ConfigurationService", className = "com.mip.config.ConstructItem")
    @ResponseWrapper(localName = "ConstructItemResponse", targetNamespace = "http://video.net/ConfigurationService", className = "com.mip.config.ConstructItemResponse")
    @WebResult(name = "ConstructItemResult", targetNamespace = "http://video.net/ConfigurationService")
    public com.mip.config.ConfigurationItem constructItem(

        @WebParam(name = "itemType", targetNamespace = "http://video.net/ConfigurationService")
        java.lang.String itemType,
        @WebParam(name = "properties", targetNamespace = "http://video.net/ConfigurationService")
        com.mip.config.ArrayOfProperty properties
    ) throws IConfigurationServiceConstructItemArgumentNullExceptionFaultFaultFaultMessage, IConfigurationServiceConstructItemArgumentExceptionFaultFaultFaultMessage, IConfigurationServiceConstructItemServerExceptionFaultFaultFaultMessage, IConfigurationServiceConstructItemPathNotFoundExceptionFaultFaultFaultMessage, IConfigurationServiceConstructItemNotSupportedExceptionFaultFaultFaultMessage, IConfigurationServiceConstructItemUnauthorizedAccessFaultFaultFaultMessage, IConfigurationServiceConstructItemLicenseExceptionFaultFaultFaultMessage;

    @WebMethod(operationName = "GetDependantItems", action = "http://video.net/ConfigurationService/IConfigurationService/GetDependantItems")
    @Action(input = "http://video.net/ConfigurationService/IConfigurationService/GetDependantItems", output = "http://video.net/ConfigurationService/IConfigurationService/GetDependantItemsResponse", fault = {@FaultAction(className = IConfigurationServiceGetDependantItemsArgumentNullExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/GetDependantItemsArgumentNullExceptionFaultFault"), @FaultAction(className = IConfigurationServiceGetDependantItemsArgumentExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/GetDependantItemsArgumentExceptionFaultFault"), @FaultAction(className = IConfigurationServiceGetDependantItemsServerExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/GetDependantItemsServerExceptionFaultFault"), @FaultAction(className = IConfigurationServiceGetDependantItemsPathNotFoundExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/GetDependantItemsPathNotFoundExceptionFaultFault"), @FaultAction(className = IConfigurationServiceGetDependantItemsNotSupportedExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/GetDependantItemsNotSupportedExceptionFaultFault"), @FaultAction(className = IConfigurationServiceGetDependantItemsUnauthorizedAccessFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/GetDependantItemsUnauthorizedAccessFaultFault"), @FaultAction(className = IConfigurationServiceGetDependantItemsLicenseExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/GetDependantItemsLicenseExceptionFaultFault")})
    @RequestWrapper(localName = "GetDependantItems", targetNamespace = "http://video.net/ConfigurationService", className = "com.mip.config.GetDependantItems")
    @ResponseWrapper(localName = "GetDependantItemsResponse", targetNamespace = "http://video.net/ConfigurationService", className = "com.mip.config.GetDependantItemsResponse")
    @WebResult(name = "GetDependantItemsResult", targetNamespace = "http://video.net/ConfigurationService")
    public com.mip.config.ArrayOfConfigurationItem getDependantItems(

        @WebParam(name = "path", targetNamespace = "http://video.net/ConfigurationService")
        java.lang.String path
    ) throws IConfigurationServiceGetDependantItemsArgumentNullExceptionFaultFaultFaultMessage, IConfigurationServiceGetDependantItemsArgumentExceptionFaultFaultFaultMessage, IConfigurationServiceGetDependantItemsServerExceptionFaultFaultFaultMessage, IConfigurationServiceGetDependantItemsPathNotFoundExceptionFaultFaultFaultMessage, IConfigurationServiceGetDependantItemsNotSupportedExceptionFaultFaultFaultMessage, IConfigurationServiceGetDependantItemsUnauthorizedAccessFaultFaultFaultMessage, IConfigurationServiceGetDependantItemsLicenseExceptionFaultFaultFaultMessage;

    @WebMethod(operationName = "DeleteItem", action = "http://video.net/ConfigurationService/IConfigurationService/DeleteItem")
    @Action(input = "http://video.net/ConfigurationService/IConfigurationService/DeleteItem", output = "http://video.net/ConfigurationService/IConfigurationService/DeleteItemResponse", fault = {@FaultAction(className = IConfigurationServiceDeleteItemArgumentNullExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/DeleteItemArgumentNullExceptionFaultFault"), @FaultAction(className = IConfigurationServiceDeleteItemArgumentExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/DeleteItemArgumentExceptionFaultFault"), @FaultAction(className = IConfigurationServiceDeleteItemServerExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/DeleteItemServerExceptionFaultFault"), @FaultAction(className = IConfigurationServiceDeleteItemPathNotFoundExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/DeleteItemPathNotFoundExceptionFaultFault"), @FaultAction(className = IConfigurationServiceDeleteItemNotSupportedExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/DeleteItemNotSupportedExceptionFaultFault"), @FaultAction(className = IConfigurationServiceDeleteItemUnauthorizedAccessFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/DeleteItemUnauthorizedAccessFaultFault"), @FaultAction(className = IConfigurationServiceDeleteItemLicenseExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/DeleteItemLicenseExceptionFaultFault")})
    @RequestWrapper(localName = "DeleteItem", targetNamespace = "http://video.net/ConfigurationService", className = "com.mip.config.DeleteItem")
    @ResponseWrapper(localName = "DeleteItemResponse", targetNamespace = "http://video.net/ConfigurationService", className = "com.mip.config.DeleteItemResponse")
    public void deleteItem(

        @WebParam(name = "path", targetNamespace = "http://video.net/ConfigurationService")
        java.lang.String path
    ) throws IConfigurationServiceDeleteItemArgumentNullExceptionFaultFaultFaultMessage, IConfigurationServiceDeleteItemArgumentExceptionFaultFaultFaultMessage, IConfigurationServiceDeleteItemServerExceptionFaultFaultFaultMessage, IConfigurationServiceDeleteItemPathNotFoundExceptionFaultFaultFaultMessage, IConfigurationServiceDeleteItemNotSupportedExceptionFaultFaultFaultMessage, IConfigurationServiceDeleteItemUnauthorizedAccessFaultFaultFaultMessage, IConfigurationServiceDeleteItemLicenseExceptionFaultFaultFaultMessage;

    @WebMethod(operationName = "GetMethodInfo", action = "http://video.net/ConfigurationService/IConfigurationService/GetMethodInfo")
    @Action(input = "http://video.net/ConfigurationService/IConfigurationService/GetMethodInfo", output = "http://video.net/ConfigurationService/IConfigurationService/GetMethodInfoResponse", fault = {@FaultAction(className = IConfigurationServiceGetMethodInfoArgumentNullExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/GetMethodInfoArgumentNullExceptionFaultFault"), @FaultAction(className = IConfigurationServiceGetMethodInfoArgumentExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/GetMethodInfoArgumentExceptionFaultFault"), @FaultAction(className = IConfigurationServiceGetMethodInfoServerExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/GetMethodInfoServerExceptionFaultFault"), @FaultAction(className = IConfigurationServiceGetMethodInfoPathNotFoundExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/GetMethodInfoPathNotFoundExceptionFaultFault"), @FaultAction(className = IConfigurationServiceGetMethodInfoNotSupportedExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/GetMethodInfoNotSupportedExceptionFaultFault"), @FaultAction(className = IConfigurationServiceGetMethodInfoUnauthorizedAccessFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/GetMethodInfoUnauthorizedAccessFaultFault"), @FaultAction(className = IConfigurationServiceGetMethodInfoLicenseExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/GetMethodInfoLicenseExceptionFaultFault")})
    @RequestWrapper(localName = "GetMethodInfo", targetNamespace = "http://video.net/ConfigurationService", className = "com.mip.config.GetMethodInfo")
    @ResponseWrapper(localName = "GetMethodInfoResponse", targetNamespace = "http://video.net/ConfigurationService", className = "com.mip.config.GetMethodInfoResponse")
    @WebResult(name = "GetMethodInfoResult", targetNamespace = "http://video.net/ConfigurationService")
    public com.mip.config.MethodInfo getMethodInfo(

        @WebParam(name = "methodId", targetNamespace = "http://video.net/ConfigurationService")
        java.lang.String methodId
    ) throws IConfigurationServiceGetMethodInfoArgumentNullExceptionFaultFaultFaultMessage, IConfigurationServiceGetMethodInfoArgumentExceptionFaultFaultFaultMessage, IConfigurationServiceGetMethodInfoServerExceptionFaultFaultFaultMessage, IConfigurationServiceGetMethodInfoPathNotFoundExceptionFaultFaultFaultMessage, IConfigurationServiceGetMethodInfoNotSupportedExceptionFaultFaultFaultMessage, IConfigurationServiceGetMethodInfoUnauthorizedAccessFaultFaultFaultMessage, IConfigurationServiceGetMethodInfoLicenseExceptionFaultFaultFaultMessage;

    @WebMethod(operationName = "InvokeMethod", action = "http://video.net/ConfigurationService/IConfigurationService/InvokeMethod")
    @Action(input = "http://video.net/ConfigurationService/IConfigurationService/InvokeMethod", output = "http://video.net/ConfigurationService/IConfigurationService/InvokeMethodResponse", fault = {@FaultAction(className = IConfigurationServiceInvokeMethodArgumentNullExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/InvokeMethodArgumentNullExceptionFaultFault"), @FaultAction(className = IConfigurationServiceInvokeMethodArgumentExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/InvokeMethodArgumentExceptionFaultFault"), @FaultAction(className = IConfigurationServiceInvokeMethodServerExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/InvokeMethodServerExceptionFaultFault"), @FaultAction(className = IConfigurationServiceInvokeMethodPathNotFoundExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/InvokeMethodPathNotFoundExceptionFaultFault"), @FaultAction(className = IConfigurationServiceInvokeMethodNotSupportedExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/InvokeMethodNotSupportedExceptionFaultFault"), @FaultAction(className = IConfigurationServiceInvokeMethodUnauthorizedAccessFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/InvokeMethodUnauthorizedAccessFaultFault"), @FaultAction(className = IConfigurationServiceInvokeMethodLicenseExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/InvokeMethodLicenseExceptionFaultFault")})
    @RequestWrapper(localName = "InvokeMethod", targetNamespace = "http://video.net/ConfigurationService", className = "com.mip.config.InvokeMethod")
    @ResponseWrapper(localName = "InvokeMethodResponse", targetNamespace = "http://video.net/ConfigurationService", className = "com.mip.config.InvokeMethodResponse")
    @WebResult(name = "InvokeMethodResult", targetNamespace = "http://video.net/ConfigurationService")
    public com.mip.config.ConfigurationItem invokeMethod(

        @WebParam(name = "item", targetNamespace = "http://video.net/ConfigurationService")
        com.mip.config.ConfigurationItem item,
        @WebParam(name = "method", targetNamespace = "http://video.net/ConfigurationService")
        java.lang.String method
    ) throws IConfigurationServiceInvokeMethodArgumentNullExceptionFaultFaultFaultMessage, IConfigurationServiceInvokeMethodArgumentExceptionFaultFaultFaultMessage, IConfigurationServiceInvokeMethodServerExceptionFaultFaultFaultMessage, IConfigurationServiceInvokeMethodPathNotFoundExceptionFaultFaultFaultMessage, IConfigurationServiceInvokeMethodNotSupportedExceptionFaultFaultFaultMessage, IConfigurationServiceInvokeMethodUnauthorizedAccessFaultFaultFaultMessage, IConfigurationServiceInvokeMethodLicenseExceptionFaultFaultFaultMessage;

    @WebMethod(operationName = "ConstructChildItem", action = "http://video.net/ConfigurationService/IConfigurationService/ConstructChildItem")
    @Action(input = "http://video.net/ConfigurationService/IConfigurationService/ConstructChildItem", output = "http://video.net/ConfigurationService/IConfigurationService/ConstructChildItemResponse", fault = {@FaultAction(className = IConfigurationServiceConstructChildItemArgumentNullExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/ConstructChildItemArgumentNullExceptionFaultFault"), @FaultAction(className = IConfigurationServiceConstructChildItemArgumentExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/ConstructChildItemArgumentExceptionFaultFault"), @FaultAction(className = IConfigurationServiceConstructChildItemServerExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/ConstructChildItemServerExceptionFaultFault"), @FaultAction(className = IConfigurationServiceConstructChildItemPathNotFoundExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/ConstructChildItemPathNotFoundExceptionFaultFault"), @FaultAction(className = IConfigurationServiceConstructChildItemNotSupportedExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/ConstructChildItemNotSupportedExceptionFaultFault"), @FaultAction(className = IConfigurationServiceConstructChildItemUnauthorizedAccessFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/ConstructChildItemUnauthorizedAccessFaultFault"), @FaultAction(className = IConfigurationServiceConstructChildItemLicenseExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/ConstructChildItemLicenseExceptionFaultFault")})
    @RequestWrapper(localName = "ConstructChildItem", targetNamespace = "http://video.net/ConfigurationService", className = "com.mip.config.ConstructChildItem")
    @ResponseWrapper(localName = "ConstructChildItemResponse", targetNamespace = "http://video.net/ConfigurationService", className = "com.mip.config.ConstructChildItemResponse")
    @WebResult(name = "ConstructChildItemResult", targetNamespace = "http://video.net/ConfigurationService")
    public com.mip.config.ConfigurationItem constructChildItem(

        @WebParam(name = "itemType", targetNamespace = "http://video.net/ConfigurationService")
        java.lang.String itemType,
        @WebParam(name = "parentPath", targetNamespace = "http://video.net/ConfigurationService")
        java.lang.String parentPath
    ) throws IConfigurationServiceConstructChildItemArgumentNullExceptionFaultFaultFaultMessage, IConfigurationServiceConstructChildItemArgumentExceptionFaultFaultFaultMessage, IConfigurationServiceConstructChildItemServerExceptionFaultFaultFaultMessage, IConfigurationServiceConstructChildItemPathNotFoundExceptionFaultFaultFaultMessage, IConfigurationServiceConstructChildItemNotSupportedExceptionFaultFaultFaultMessage, IConfigurationServiceConstructChildItemUnauthorizedAccessFaultFaultFaultMessage, IConfigurationServiceConstructChildItemLicenseExceptionFaultFaultFaultMessage;

    @WebMethod(operationName = "GetMethodInfos", action = "http://video.net/ConfigurationService/IConfigurationService/GetMethodInfos")
    @Action(input = "http://video.net/ConfigurationService/IConfigurationService/GetMethodInfos", output = "http://video.net/ConfigurationService/IConfigurationService/GetMethodInfosResponse", fault = {@FaultAction(className = IConfigurationServiceGetMethodInfosArgumentNullExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/GetMethodInfosArgumentNullExceptionFaultFault"), @FaultAction(className = IConfigurationServiceGetMethodInfosArgumentExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/GetMethodInfosArgumentExceptionFaultFault"), @FaultAction(className = IConfigurationServiceGetMethodInfosServerExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/GetMethodInfosServerExceptionFaultFault"), @FaultAction(className = IConfigurationServiceGetMethodInfosPathNotFoundExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/GetMethodInfosPathNotFoundExceptionFaultFault"), @FaultAction(className = IConfigurationServiceGetMethodInfosNotSupportedExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/GetMethodInfosNotSupportedExceptionFaultFault"), @FaultAction(className = IConfigurationServiceGetMethodInfosUnauthorizedAccessFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/GetMethodInfosUnauthorizedAccessFaultFault"), @FaultAction(className = IConfigurationServiceGetMethodInfosLicenseExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/GetMethodInfosLicenseExceptionFaultFault")})
    @RequestWrapper(localName = "GetMethodInfos", targetNamespace = "http://video.net/ConfigurationService", className = "com.mip.config.GetMethodInfos")
    @ResponseWrapper(localName = "GetMethodInfosResponse", targetNamespace = "http://video.net/ConfigurationService", className = "com.mip.config.GetMethodInfosResponse")
    @WebResult(name = "GetMethodInfosResult", targetNamespace = "http://video.net/ConfigurationService")
    public com.mip.config.ArrayOfMethodInfo getMethodInfos()
 throws IConfigurationServiceGetMethodInfosArgumentNullExceptionFaultFaultFaultMessage, IConfigurationServiceGetMethodInfosArgumentExceptionFaultFaultFaultMessage, IConfigurationServiceGetMethodInfosServerExceptionFaultFaultFaultMessage, IConfigurationServiceGetMethodInfosPathNotFoundExceptionFaultFaultFaultMessage, IConfigurationServiceGetMethodInfosNotSupportedExceptionFaultFaultFaultMessage, IConfigurationServiceGetMethodInfosUnauthorizedAccessFaultFaultFaultMessage, IConfigurationServiceGetMethodInfosLicenseExceptionFaultFaultFaultMessage;

    @WebMethod(operationName = "QueryItems", action = "http://video.net/ConfigurationService/IConfigurationService/QueryItems")
    @Action(input = "http://video.net/ConfigurationService/IConfigurationService/QueryItems", output = "http://video.net/ConfigurationService/IConfigurationService/QueryItemsResponse", fault = {@FaultAction(className = IConfigurationServiceQueryItemsArgumentNullExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/QueryItemsArgumentNullExceptionFaultFault"), @FaultAction(className = IConfigurationServiceQueryItemsArgumentExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/QueryItemsArgumentExceptionFaultFault"), @FaultAction(className = IConfigurationServiceQueryItemsServerExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/QueryItemsServerExceptionFaultFault"), @FaultAction(className = IConfigurationServiceQueryItemsPathNotFoundExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/QueryItemsPathNotFoundExceptionFaultFault"), @FaultAction(className = IConfigurationServiceQueryItemsNotSupportedExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/QueryItemsNotSupportedExceptionFaultFault"), @FaultAction(className = IConfigurationServiceQueryItemsUnauthorizedAccessFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/QueryItemsUnauthorizedAccessFaultFault"), @FaultAction(className = IConfigurationServiceQueryItemsLicenseExceptionFaultFaultFaultMessage.class, value = "http://video.net/ConfigurationService/IConfigurationService/QueryItemsLicenseExceptionFaultFault")})
    @RequestWrapper(localName = "QueryItems", targetNamespace = "http://video.net/ConfigurationService", className = "com.mip.config.QueryItems")
    @ResponseWrapper(localName = "QueryItemsResponse", targetNamespace = "http://video.net/ConfigurationService", className = "com.mip.config.QueryItemsResponse")
    @WebResult(name = "QueryItemsResult", targetNamespace = "http://video.net/ConfigurationService")
    public com.mip.config.ArrayOfConfigurationItem queryItems(

        @WebParam(name = "itemFilter", targetNamespace = "http://video.net/ConfigurationService")
        com.mip.config.ItemFilter itemFilter,
        @WebParam(name = "maxResult", targetNamespace = "http://video.net/ConfigurationService")
        java.lang.Integer maxResult
    ) throws IConfigurationServiceQueryItemsArgumentNullExceptionFaultFaultFaultMessage, IConfigurationServiceQueryItemsArgumentExceptionFaultFaultFaultMessage, IConfigurationServiceQueryItemsServerExceptionFaultFaultFaultMessage, IConfigurationServiceQueryItemsPathNotFoundExceptionFaultFaultFaultMessage, IConfigurationServiceQueryItemsNotSupportedExceptionFaultFaultFaultMessage, IConfigurationServiceQueryItemsUnauthorizedAccessFaultFaultFaultMessage, IConfigurationServiceQueryItemsLicenseExceptionFaultFaultFaultMessage;
}
